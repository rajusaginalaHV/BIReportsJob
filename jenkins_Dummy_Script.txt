// script for paramterized job/build with pwd handler
def passwordHandler(param) {
    echo "This is inside function : ${param}"
    StringBuilder result = new StringBuilder()
	for(int i=0;i<param.length;i++){
		if(param[i]=='%'){
			result+='%'
		}
		result+=param[i]
	}
    return result.toString()
}


pipeline {
    agent any

    stages {
        stage('Generate payload') {
            steps {
                script {
                    def hasPercentage = ${PASSWORD}.contains('%')

                    echo "Has Percentage: ${hasPercentage}"

                    if (hasPercentage) {
					    def PASSWORDNEW = passwordHandler(${PASSWORD})
						echo "Original pwd: ${PASSWORD}"
						echo "Modifed pwd : ${PASSWORDNEW}"
                        bat " java EncodeToBase64 ${REPORTNAME} Payload.xml ${REPORTPATH} ${USERNAME} ${PASSWORDNEW} "
                    } else {
                        bat " java EncodeToBase64  ${REPORTNAME} Payload.xml ${REPORTPATH} ${USERNAME} \"${PASSWORD}\" "
                    }

                    echo "Username: ${USERNAME}"
                    echo "Password: ${PASSWORD}"
                    echo "Report Name: ${REPORTNAME}"
                    echo "Selected Value: ${REPORTPATH}"
                }
            }
        }

        stage('Move BI object to catalog server') {
            steps {
                script {
                    status_code = bat(returnStdout: true, script: "curl --output output.gzip -w \"%%{http_code}\" --silent --header \"Content-Type:application/xml\" -d @Payload.xml https://fa-etaj-saasfademo1.ds-fa.oraclepdemos.com:443/xmlpserver/services/v2/CatalogService").trim().split("\n")[1]

                    echo "HTTP response status code: ${status_code}"

                    if (status_code != "200") {
                        error('URL status different from 200. Exiting script. Please refer to output.gzip')
                    }
                }
            }
        }
    }
}
